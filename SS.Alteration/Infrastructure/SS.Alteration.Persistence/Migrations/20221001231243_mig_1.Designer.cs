// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SS.Alteration.Persistence.Contexts;

#nullable disable

namespace SS.Alteration.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221001231243_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SS.Alteration.Domain.Entities.AlterationForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlterationStatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<Guid>("SuitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlterationStatusId");

                    b.ToTable("AlterationForms");
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.AlterationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlterationStatuses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b22464c6-baea-4f03-9678-12db237d4279"),
                            CreatedAt = new DateTime(2022, 10, 1, 23, 12, 43, 432, DateTimeKind.Utc).AddTicks(3468),
                            Name = "Received"
                        },
                        new
                        {
                            Id = new Guid("205abac2-5b91-4781-aa70-97394bc16abc"),
                            CreatedAt = new DateTime(2022, 10, 1, 23, 12, 43, 432, DateTimeKind.Utc).AddTicks(3490),
                            Name = "InProgress"
                        },
                        new
                        {
                            Id = new Guid("46bc6a0d-fd67-423a-9f65-190a1dbe5e1d"),
                            CreatedAt = new DateTime(2022, 10, 1, 23, 12, 43, 432, DateTimeKind.Utc).AddTicks(3492),
                            Name = "Ready"
                        });
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.Instruction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlterationFormId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlterationFormId");

                    b.ToTable("Instructions");
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.AlterationForm", b =>
                {
                    b.HasOne("SS.Alteration.Domain.Entities.AlterationStatus", "AlterationStatus")
                        .WithMany("AlterationForms")
                        .HasForeignKey("AlterationStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlterationStatus");
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.Instruction", b =>
                {
                    b.HasOne("SS.Alteration.Domain.Entities.AlterationForm", "AlterationForm")
                        .WithMany("Instructions")
                        .HasForeignKey("AlterationFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlterationForm");
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.AlterationForm", b =>
                {
                    b.Navigation("Instructions");
                });

            modelBuilder.Entity("SS.Alteration.Domain.Entities.AlterationStatus", b =>
                {
                    b.Navigation("AlterationForms");
                });
#pragma warning restore 612, 618
        }
    }
}
